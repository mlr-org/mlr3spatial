[{"path":"https://mlr3spatial.mlr-org.com/dev/articles/benchmark.html","id":"preparations","dir":"Articles","previous_headings":"","what":"Preparations","title":"Benchmark Parallel Predictions","text":"","code":"stack = generate_stack(list(   numeric_layer(\"x_1\"),   factor_layer(\"y\", levels = c(\"a\", \"b\"))), layer_size = 10) vector = sample_stack(stack, n = 500) task_train = as_task_classif_st(vector, id = \"test_vector\", target = \"y\") learner = lrn(\"classif.ranger\", num.threads = 1) learner$train(task_train) terra_rf = ranger::ranger(y ~ ., data = task_train$data(), num.threads = 1) stack$y = NULL task_predict = as_task_unsupervised(stack, id = \"test\") learner$parallel_predict = TRUE"},{"path":"https://mlr3spatial.mlr-org.com/dev/articles/benchmark.html","id":"benchmark","dir":"Articles","previous_headings":"","what":"Benchmark","title":"Benchmark Parallel Predictions","text":"","code":"bm = bench::mark(    \"01-mlr3-4-cores\" = {     plan(multicore, workers = 4)     pred = predict_spatial(task_predict, learner, chunksize = 10L)   },    \"02-terra-4-cores\" = {     library(terra)     pred = predict(stack, terra_rf, cores = 4, cpkgs = \"ranger\",       fun = function(model, ...) predict(model, ...)$predictions)   },    \"03-mlr3-all-cores\" = {     plan(multicore)     pred = predict_spatial(task_predict, learner, chunksize = 10L)   },    \"04-terra-all-cores\" = {     library(terra)     pred = predict(stack, terra_rf, cores = parallelly::availableCores(), cpkgs = \"ranger\",       fun = function(model, ...) predict(model, ...)$predictions)   },    check = FALSE, filter_gc = FALSE, min_iterations = 3,   max_iterations = 3, memory = FALSE)  bm$`itr/sec` = NULL bm$result = NULL bm$`gc/sec` = NULL bm$memory = NULL bm$mem_alloc = NULL  print(bm) #> # A tibble: 4 × 8 #>   expression              min   median n_itr  n_gc total_time time           gc               #>   <bch:expr>         <bch:tm> <bch:tm> <int> <dbl>   <bch:tm> <list>         <list>           #> 1 01-mlr3-4-cores       20.7s    21.4s     3    57      1.07m <bench_tm [3]> <tibble [3 × 3]> #> 2 02-terra-4-cores      21.9s    23.1s     3    31      1.14m <bench_tm [3]> <tibble [3 × 3]> #> 3 03-mlr3-all-cores     12.5s    12.5s     3    51     37.45s <bench_tm [3]> <tibble [3 × 3]> #> 4 04-terra-all-cores    32.6s    32.7s     3    77      1.64m <bench_tm [3]> <tibble [3 × 3]> library(ggplot2) autoplot(bm, type = \"ridge\") #> Picking joint bandwidth of 0.00417"},{"path":"https://mlr3spatial.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Becker. Author, maintainer. Patrick Schratz. Author.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker M, Schratz P (2025). mlr3spatial: Support Spatial Objects Within 'mlr3' Ecosystem. R package version 0.5.0.9000, https://github.com/mlr-org/mlr3spatial, https://mlr3spatial.mlr-org.com.","code":"@Manual{,   title = {mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem},   author = {Marc Becker and Patrick Schratz},   year = {2025},   note = {R package version 0.5.0.9000,     https://github.com/mlr-org/mlr3spatial},   url = {https://mlr3spatial.mlr-org.com}, }"},{"path":"https://mlr3spatial.mlr-org.com/dev/index.html","id":"mlr3spatial-","dir":"","previous_headings":"","what":"Support for Spatial Objects Within the mlr3 Ecosystem","title":"Support for Spatial Objects Within the mlr3 Ecosystem","text":"Package website: release | dev mlr3spatial package spatial objects within mlr3 ecosystem. package directly loads data sf objects train mlr3 learner. learner can predict various raster formats (terra, raster stars) writes prediction raster disk. mlr3spatial reads large raster objects chunks avoid memory issues predicts chunks parallel. Check mlr3spatiotempcv spatiotemporal resampling within mlr3.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Support for Spatial Objects Within the mlr3 Ecosystem","text":"sections spatial data mlr3book. Learn predict spatial raster image. Estimate performance model spatial cross-validation. gallery features articles spatial data mlr3 ecosystem. Learn basics land cover classification city Leipzig.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Support for Spatial Objects Within the mlr3 Ecosystem","text":"Install last release CRAN: Install development version GitHub:","code":"install.packages(\"mlr3spatial\") remotes::install_github(\"mlr-org/mlr3spatial\")"},{"path":"https://mlr3spatial.mlr-org.com/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Support for Spatial Objects Within the mlr3 Ecosystem","text":"goal map land cover city Leipzig. mlr3spatial package contains Sentinel-2 scene city Leipzig point vector training sites. Sentinel-2 scene 10m resolution multispectral image 7 bands NDVI. points represent samples four land cover classes: Forest, Pastures, Urban Water. load raster terra package vector sf package R Session. function as_task_classif_st() converts sf::sf object spatial classification task. points located district Lindenau Zentrum-West.  Now train classification tree leipzig task. last step, predict land cover class whole area interest. , pass Sentinel-2 scene trained learner predict_spatial() function.","code":"library(mlr3verse) library(mlr3spatial) library(terra, exclude = \"resample\") library(sf)  leipzig = read_sf(system.file(\"extdata\", \"leipzig_points.gpkg\", package = \"mlr3spatial\"), stringsAsFactors = TRUE)  leipzig_raster = rast(system.file(\"extdata\", \"leipzig_raster.tif\", package = \"mlr3spatial\")) task = as_task_classif_st(leipzig, target = \"land_cover\") task ## <TaskClassifST:leipzig> (97 x 9) ## * Target: land_cover ## * Properties: multiclass ## * Features (8): ##   - dbl (8): b02, b03, b04, b06, b07, b08, b11, ndvi ## * Coordinates: ##            X       Y ##  1: 732480.1 5693957 ##  2: 732217.4 5692769 ##  3: 732737.2 5692469 ##  4: 733169.3 5692777 ##  5: 732202.2 5692644 ## ---                  ## 93: 733018.7 5692342 ## 94: 732551.4 5692887 ## 95: 732520.4 5692589 ## 96: 732542.2 5692204 ## 97: 732437.8 5692300 learner = lrn(\"classif.rpart\") learner$train(task) land_cover = predict_spatial(leipzig_raster, learner)"},{"path":[]},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"DataBackend for Raster Objects — DataBackendRaster","title":"DataBackend for Raster Objects — DataBackendRaster","text":"mlr3::DataBackend terra::SpatRaster raster objects.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"read-mode","dir":"Reference","previous_headings":"","what":"Read mode","title":"DataBackend for Raster Objects — DataBackendRaster","text":"two different ways reading values performed internally: \"Block mode\" reads complete rows raster file subsets requested cells. mode faster \"cell mode\" complete raster file iterated . \"Cell mode\" reads individual cells. faster \"block mode\" cells sampled. \"Block mode\" activated $data(rows) used increasing integer sequence e.g. 200:300. single cell requested, \"cell mode\" used.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"DataBackend for Raster Objects — DataBackendRaster","text":"mlr3::DataBackend -> DataBackendRaster","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"DataBackend for Raster Objects — DataBackendRaster","text":"rownames (integer()) Returns vector distinct row identifiers, .e. contents primary key column. colnames (character()) Returns vector column names. nrow (integer(1)) Number rows (observations). ncol (integer(1)) Number columns (variables). stack (SpatRaster) Raster stack.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"DataBackend for Raster Objects — DataBackendRaster","text":"mlr3::DataBackend$format() mlr3::DataBackend$print()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataBackend for Raster Objects — DataBackendRaster","text":"DataBackendRaster$new() DataBackendRaster$data() DataBackendRaster$head() DataBackendRaster$distinct() DataBackendRaster$missings() DataBackendRaster$coordinates()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Raster Objects — DataBackendRaster","text":"","code":"DataBackendRaster$new(data)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Raster Objects — DataBackendRaster","text":"data (terra::SpatRaster) input terra::SpatRaster.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"method-data-","dir":"Reference","previous_headings":"","what":"Method data()","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Returns slice raster specified format. Currently, supported formats \"data.table\". rows must addressed vector cells indices, columns must referred via layer names. Queries rows matching row id queries columns matching column name silently ignored. Rows guaranteed returned order rows, columns may returned arbitrary order. Duplicated row ids result duplicated rows, duplicated column names lead exception.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Raster Objects — DataBackendRaster","text":"","code":"DataBackendRaster$data(rows, cols, data_format = \"data.table\")"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Raster Objects — DataBackendRaster","text":"rows integer() Row indices. Row indices start 1 upper left corner raster, increase left right top bottom. last cell bottom right corner row index equals number cells raster. cols character() Column names. data_format (character(1)) Desired data format. Currently \"data.table\" supported.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"method-head-","dir":"Reference","previous_headings":"","what":"Method head()","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Retrieve first n rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Raster Objects — DataBackendRaster","text":"","code":"DataBackendRaster$head(n = 6L)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Raster Objects — DataBackendRaster","text":"n (integer(1)) Number rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for Raster Objects — DataBackendRaster","text":"data.table::data.table() first n rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"method-distinct-","dir":"Reference","previous_headings":"","what":"Method distinct()","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Returns named list vectors distinct values column specified. na_rm TRUE, missing values removed returned vectors distinct values. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Raster Objects — DataBackendRaster","text":"","code":"DataBackendRaster$distinct(rows, cols, na_rm = TRUE)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Raster Objects — DataBackendRaster","text":"rows integer() Row indices. Row indices start 1 upper left corner raster, increase left right top bottom. last cell bottom right corner row index equals number cells raster. cols character() Column names. na_rm logical(1) Whether remove NAs .","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Named list() distinct values.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"method-missings-","dir":"Reference","previous_headings":"","what":"Method missings()","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Returns number missing values per column specified slice data. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Raster Objects — DataBackendRaster","text":"","code":"DataBackendRaster$missings(rows, cols)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Raster Objects — DataBackendRaster","text":"rows integer() Row indices. Row indices start 1 upper left corner raster, increase left right top bottom. last cell bottom right corner row index equals number cells raster. cols character() Column names.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Total missing values per column (named numeric()).","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"method-coordinates-","dir":"Reference","previous_headings":"","what":"Method coordinates()","title":"DataBackend for Raster Objects — DataBackendRaster","text":"Returns coordinates rows. rows missing, coordinates returned.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Raster Objects — DataBackendRaster","text":"","code":"DataBackendRaster$coordinates(rows)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Raster Objects — DataBackendRaster","text":"rows integer() Row indices. Row indices start 1 upper left corner raster, increase left right top bottom. last cell bottom right corner row index equals number cells raster.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendRaster.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for Raster Objects — DataBackendRaster","text":"data.table::data.table() coordinates rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":null,"dir":"Reference","previous_headings":"","what":"DataBackend for Vector Objects — DataBackendVector","title":"DataBackend for Vector Objects — DataBackendVector","text":"mlr3::DataBackend sf::sf vector objects.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"DataBackend for Vector Objects — DataBackendVector","text":"mlr3::DataBackend -> mlr3::DataBackendDataTable -> DataBackendVector","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"DataBackend for Vector Objects — DataBackendVector","text":"sfc (sf::sfc) Returns sfc object.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"DataBackend for Vector Objects — DataBackendVector","text":"mlr3::DataBackend$format() mlr3::DataBackend$print() mlr3::DataBackendDataTable$data() mlr3::DataBackendDataTable$distinct() mlr3::DataBackendDataTable$head() mlr3::DataBackendDataTable$missings()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataBackend for Vector Objects — DataBackendVector","text":"DataBackendVector$new()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataBackend for Vector Objects — DataBackendVector","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for Vector Objects — DataBackendVector","text":"","code":"DataBackendVector$new(data, primary_key)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/DataBackendVector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for Vector Objects — DataBackendVector","text":"data (sf) raster object. primary_key (character(1) | integer()) Name primary key column, integer vector row ids.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatiotemporal Classification Task — TaskClassifST","title":"Spatiotemporal Classification Task — TaskClassifST","text":"task specializes TaskClassif spatiotemporal classification problems. spatial example task available via tsk(\"ecuador\"). coordinate reference system passed initialization must match one used data creation, otherwise offsets multiple meters may occur. default, coordinates used features. can changed setting coords_as_features = TRUE.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Spatiotemporal Classification Task — TaskClassifST","text":"mlr3::Task -> mlr3::TaskSupervised -> mlr3::TaskClassif -> TaskClassifST","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Spatiotemporal Classification Task — TaskClassifST","text":"crs (character(1)) Returns coordinate reference system task. coordinate_names (character()) Returns coordinate names. coords_as_features (logical(1)) TRUE, coordinates used features.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Spatiotemporal Classification Task — TaskClassifST","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$missings() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles() mlr3::TaskClassif$droplevels() mlr3::TaskClassif$truth()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Spatiotemporal Classification Task — TaskClassifST","text":"TaskClassifST$new() TaskClassifST$coordinates() TaskClassifST$print() TaskClassifST$clone()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Spatiotemporal Classification Task — TaskClassifST","text":"Creates new instance R6 class. function as_task_classif_st() provides alternative way construct classification tasks.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Classification Task — TaskClassifST","text":"","code":"TaskClassifST$new(   id,   backend,   target,   positive = NULL,   label = NA_character_,   coordinate_names,   crs = NA_character_,   coords_as_features = FALSE,   extra_args = list() )"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Classification Task — TaskClassifST","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., sf converted DataBackendDataTable. target (character(1)) Name target column. positive (character(1)) binary classification: Name positive class. levels target columns reordered accordingly, first element $class_names positive class, second element negative class. label (character(1)) Label new instance. coordinate_names (character(1)) column names coordinates data. crs (character(1)) Coordinate reference system. WKT2 EPSG string. coords_as_features (logical(1)) TRUE, coordinates used features. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"method-coordinates-","dir":"Reference","previous_headings":"","what":"Method coordinates()","title":"Spatiotemporal Classification Task — TaskClassifST","text":"Returns coordinates observations.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Classification Task — TaskClassifST","text":"","code":"TaskClassifST$coordinates(row_ids = NULL)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Classification Task — TaskClassifST","text":"row_ids (integer()) Vector rows indices subset task$row_ids.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Spatiotemporal Classification Task — TaskClassifST","text":"data.table::data.table()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Spatiotemporal Classification Task — TaskClassifST","text":"Print task.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Classification Task — TaskClassifST","text":"","code":"TaskClassifST$print(...)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Classification Task — TaskClassifST","text":"... Arguments passed $print() method superclass.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Spatiotemporal Classification Task — TaskClassifST","text":"objects class cloneable method.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Classification Task — TaskClassifST","text":"","code":"TaskClassifST$clone(deep = FALSE)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskClassifST.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Classification Task — TaskClassifST","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatiotemporal Regression Task — TaskRegrST","title":"Spatiotemporal Regression Task — TaskRegrST","text":"task specializes TaskRegr spatiotemporal regression problems. spatial example task available via tsk(\"cookfarm_mlr3\"). coordinate reference system passed initialization must match one used data creation, otherwise offsets multiple meters may occur. default, coordinates used features. can changed setting coords_as_features = TRUE.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Spatiotemporal Regression Task — TaskRegrST","text":"mlr3::Task -> mlr3::TaskSupervised -> mlr3::TaskRegr -> TaskRegrST","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Spatiotemporal Regression Task — TaskRegrST","text":"crs (character(1)) Returns coordinate reference system task. coordinate_names (character()) Returns coordinate names. coords_as_features (logical(1)) TRUE, coordinates used features.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Spatiotemporal Regression Task — TaskRegrST","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$droplevels() mlr3::Task$filter() mlr3::Task$format() mlr3::Task$formula() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$missings() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles() mlr3::TaskRegr$truth()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Spatiotemporal Regression Task — TaskRegrST","text":"TaskRegrST$new() TaskRegrST$coordinates() TaskRegrST$print() TaskRegrST$clone()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Spatiotemporal Regression Task — TaskRegrST","text":"Creates new instance R6 class. function as_task_regr_st() provides alternative way construct classification tasks.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Regression Task — TaskRegrST","text":"","code":"TaskRegrST$new(   id,   backend,   target,   label = NA_character_,   coordinate_names,   crs = NA_character_,   coords_as_features = FALSE,   extra_args = list() )"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Regression Task — TaskRegrST","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., sf converted DataBackendDataTable. target (character(1)) Name target column. label (character(1)) Label new instance. coordinate_names (character(1)) column names coordinates data. crs (character(1)) Coordinate reference system. WKT2 EPSG string. coords_as_features (logical(1)) TRUE, coordinates used features. extra_args (named list()) Named list constructor arguments, required converting task types via convert_task().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"method-coordinates-","dir":"Reference","previous_headings":"","what":"Method coordinates()","title":"Spatiotemporal Regression Task — TaskRegrST","text":"Returns coordinates observations.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Regression Task — TaskRegrST","text":"","code":"TaskRegrST$coordinates(row_ids = NULL)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Regression Task — TaskRegrST","text":"row_ids (integer()) Vector rows indices subset task$row_ids.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Spatiotemporal Regression Task — TaskRegrST","text":"data.table::data.table()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Spatiotemporal Regression Task — TaskRegrST","text":"Print task.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Regression Task — TaskRegrST","text":"","code":"TaskRegrST$print(...)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Regression Task — TaskRegrST","text":"... Arguments passed $print() method superclass.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Spatiotemporal Regression Task — TaskRegrST","text":"objects class cloneable method.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal Regression Task — TaskRegrST","text":"","code":"TaskRegrST$clone(deep = FALSE)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/TaskRegrST.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal Regression Task — TaskRegrST","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_data_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to spatial DataBackend — as_data_backend.stars","title":"Coerce to spatial DataBackend — as_data_backend.stars","text":"Wraps DataBackend around spatial objects. Currently S3 methods alternative ways writing DataBackendRaster$new(). support coercing backends yet.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_data_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to spatial DataBackend — as_data_backend.stars","text":"","code":"# S3 method for class 'stars' as_data_backend(data, primary_key = NULL, ...)  # S3 method for class 'SpatRaster' as_data_backend(data, primary_key = NULL, ...)  # S3 method for class 'RasterBrick' as_data_backend(data, primary_key = NULL, ...)  # S3 method for class 'RasterStack' as_data_backend(data, primary_key = NULL, ...)  # S3 method for class 'sf' as_data_backend(data, primary_key = NULL, keep_rownames = FALSE, ...)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_data_backend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to spatial DataBackend — as_data_backend.stars","text":"data (terra::SpatRaster) input terra::SpatRaster. primary_key (character(1) | integer()) Name primary key column, integer vector row ids. ... () used. keep_rownames (logical(1) | character(1)) TRUE single string, keeps row names data new column. column named like provided string, defaulting \"..rownames\" keep_rownames == TRUE. Note created column used regular feature task unless manually change column role. Also see data.table::.data.table().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_data_backend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to spatial DataBackend — as_data_backend.stars","text":"DataBackend.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_classif_st.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Spatiotemporal Classification Task — as_task_classif_st","title":"Convert to a Spatiotemporal Classification Task — as_task_classif_st","text":"Convert object TaskClassifST. S3 generic, specialized least following objects: TaskClassifST: Ensure identity. data.frame() DataBackend: Provides alternative constructor TaskClassifST. sf::sf: Extracts spatial meta data construction. TaskRegr: Calls convert_task().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_classif_st.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Spatiotemporal Classification Task — as_task_classif_st","text":"","code":"as_task_classif_st(x, ...)  # S3 method for class 'TaskClassifST' as_task_classif_st(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_classif_st(   x,   target,   id = deparse(substitute(x)),   positive = NULL,   coordinate_names,   crs = NA_character_,   coords_as_features = FALSE,   label = NA_character_,   ... )  # S3 method for class 'DataBackend' as_task_classif_st(   x,   target,   id = deparse(substitute(x)),   positive = NULL,   coordinate_names,   crs,   coords_as_features = FALSE,   label = NA_character_,   ... )  # S3 method for class 'sf' as_task_classif_st(   x,   target = NULL,   id = deparse(substitute(x)),   positive = NULL,   coords_as_features = FALSE,   label = NA_character_,   ... )  # S3 method for class 'TaskRegrST' as_task_classif_st(   x,   target = NULL,   drop_original_target = FALSE,   drop_levels = TRUE,   ... )"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_classif_st.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Spatiotemporal Classification Task — as_task_classif_st","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. target (character(1)) Name target column. id (character(1)) Id new task. Defaults (deparsed substituted) name data argument. positive (character(1)) Level positive class. See TaskClassif. coordinate_names (character(1)) column names coordinates data. crs (character(1)) Coordinate reference system. WKT2 EPSG string. coords_as_features (logical(1)) TRUE, coordinates used features. label (character(1)) Label new instance. drop_original_target (logical(1)) FALSE (default), original target added feature. Otherwise original target dropped. drop_levels (logical(1)) TRUE (default), unused levels new target variable dropped.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_classif_st.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Spatiotemporal Classification Task — as_task_classif_st","text":"TaskClassifST","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_regr_st.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Spatiotemporal Regression Task — as_task_regr_st","title":"Convert to a Spatiotemporal Regression Task — as_task_regr_st","text":"Convert object TaskRegrST. S3 generic, specialized least following objects: TaskRegrST: Ensure identity. data.frame() DataBackend: Provides alternative constructor TaskRegrST. sf::sf: Extracts spatial meta data construction. TaskClassif: Calls convert_task().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_regr_st.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Spatiotemporal Regression Task — as_task_regr_st","text":"","code":"as_task_regr_st(x, ...)  # S3 method for class 'TaskRegrST' as_task_regr_st(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_regr_st(   x,   target,   id = deparse(substitute(x)),   coordinate_names,   crs = NA_character_,   coords_as_features = FALSE,   label = NA_character_,   ... )  # S3 method for class 'DataBackend' as_task_regr_st(   x,   target,   id = deparse(substitute(x)),   coordinate_names,   crs,   coords_as_features = FALSE,   label = NA_character_,   ... )  # S3 method for class 'sf' as_task_regr_st(   x,   target = NULL,   id = deparse(substitute(x)),   coords_as_features = FALSE,   label = NA_character_,   ... )  # S3 method for class 'TaskClassifST' as_task_regr_st(   x,   target = NULL,   drop_original_target = FALSE,   drop_levels = TRUE,   ... )"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_regr_st.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Spatiotemporal Regression Task — as_task_regr_st","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. target (character(1)) Name target column. id (character(1)) Id new task. Defaults (deparsed substituted) name data argument. coordinate_names (character(1)) column names coordinates data. crs (character(1)) Coordinate reference system. WKT2 EPSG string. coords_as_features (logical(1)) TRUE, coordinates used features. label (character(1)) Label new instance. drop_original_target (logical(1)) FALSE (default), original target added feature. Otherwise original target dropped. drop_levels (logical(1)) TRUE (default), unused levels new target variable dropped.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/as_task_regr_st.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Spatiotemporal Regression Task — as_task_regr_st","text":"TaskRegrST","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/block_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Raster Into Chunks — block_size","title":"Split Raster Into Chunks — block_size","text":"Splits raster chunks.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/block_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Raster Into Chunks — block_size","text":"","code":"block_size(raster, chunksize)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/block_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Raster Into Chunks — block_size","text":"raster (terra::SpatRaster) Raster split chunks. chunksize (integer(1)) chunksize determines many subparts prediction task split . value can roughly thought megabyte raster file disk. example, prediction 1 GB file carried chunksize = 100L, prediction happen 10 chunks. default chunksize = 1000L might good compromise speed memory usage. find running memory, reduce value.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/factor_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor Layer Generator — factor_layer","title":"Factor Layer Generator — factor_layer","text":"Generates factor layer passed generate_stack().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/factor_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor Layer Generator — factor_layer","text":"","code":"factor_layer(id, levels, in_memory = FALSE)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/factor_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor Layer Generator — factor_layer","text":"id (character(1)) Layer id. levels (character()) Factor levels. in_memory (logical(1)) FALSE (default), layer written disk.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/factor_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factor Layer Generator — factor_layer","text":"Named list()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/generate_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Raster Stack — generate_stack","title":"Generate Raster Stack — generate_stack","text":"Generates raster stack.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/generate_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Raster Stack — generate_stack","text":"","code":"generate_stack(   layers,   layer_size = NULL,   dimension = NULL,   multi_layer_file = FALSE )"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/generate_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Raster Stack — generate_stack","text":"layers (List numeric_layer() factor_layer()) List layers. layer_size (numeric(1)) Size single layer megabytes. dimension (integer(1)) Dimension squared layers. multi_layer_file (logical(1)) TRUE, raster written disk single multi-layer file. Overwrites ìn_memory argument numeric_layer() factor_layer(). layer_size dimension mutually exclusive.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/generate_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Raster Stack — generate_stack","text":"terra::SpatRaster","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/leipzig.html","id":null,"dir":"Reference","previous_headings":"","what":"Leipzig Land Cover Task — leipzig","title":"Leipzig Land Cover Task — leipzig","text":"Point survey land cover Leipzig. Includes Sentinel-2 spectral bands NDVI.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/leipzig.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Leipzig Land Cover Task — leipzig","text":"Copernicus Sentinel Data (2021). Retrieved Copernicus Open Access Hub processed European Space Agency.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/leipzig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leipzig Land Cover Task — leipzig","text":"","code":"if (requireNamespace(\"sf\")) {   library(sf)   data(\"leipzig\", package = \"mlr3spatial\")   print(leipzig) } #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE #> Simple feature collection with 97 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 731930.5 ymin: 5692136 xmax: 733220.3 ymax: 5693968 #> Projected CRS: WGS 84 / UTM zone 32N #> # A tibble: 97 × 10 #>      b02   b03   b04   b06   b07   b08   b11    ndvi land_cover #>  * <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>   <dbl> <chr>      #>  1   903   772   426  2998  4240  4029  1816  0.809  forest     #>  2  1270  1256  1081  1998  2493  2957  2073  0.465  urban      #>  3  1033   996   777  2117  2748  2799  1595  0.565  urban      #>  4   962   773   500   465   505   396   153 -0.116  water      #>  5  1576  1527  1626  1715  1745  1768  1980  0.0418 urban      #>  6  1125  1185   920  3058  3818  3758  2682  0.607  pasture    #>  7   880   746   424  2502  3500  3397  1469  0.778  forest     #>  8  1332  1251  1385  1663  1799  1640  1910  0.0843 urban      #>  9   940   741   475   452   515   400   139 -0.0857 water      #> 10   902   802   454  2764  3821  3666  1567  0.780  forest     #> # ℹ 87 more rows #> # ℹ 1 more variable: geom <POINT [m]>"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mask_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Points in Raster Stack — mask_stack","title":"Sample Points in Raster Stack — mask_stack","text":"Masks stack circular area interest.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mask_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Points in Raster Stack — mask_stack","text":"","code":"mask_stack(stack)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mask_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Points in Raster Stack — mask_stack","text":"stack (terra::SpatRaster) Raster stack.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mask_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Points in Raster Stack — mask_stack","text":"terra::SpatRaster","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mlr3spatial-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Extends 'mlr3' ML framework methods spatial objects. Data storage prediction supported packages 'terra', 'raster' 'stars'.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mlr3spatial-package.html","id":"learn-mlr-","dir":"Reference","previous_headings":"","what":"Learn mlr3","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Book mlr3: https://mlr3book.mlr-org.com Use cases examples gallery: https://mlr3gallery.mlr-org.com Cheat Sheets: https://github.com/mlr-org/mlr3cheatsheets","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mlr3spatial-package.html","id":"mlr-extensions","dir":"Reference","previous_headings":"","what":"mlr3 extensions","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Preprocessing machine learning pipelines: mlr3pipelines Analysis benchmark experiments: mlr3benchmark classification regression tasks: mlr3data Connector OpenML: mlr3oml Solid selection good classification regression learners: mlr3learners Even learners: https://github.com/mlr-org/mlr3extralearners Tuning hyperparameters: mlr3tuning Hyperband tuner: mlr3hyperband Visualizations many mlr3 objects: mlr3viz Survival analysis probabilistic regression: mlr3proba Cluster analysis: mlr3cluster Feature selection filters: mlr3filters Feature selection wrappers: mlr3fselect Interface real (--memory) data bases: mlr3db Performance measures plain functions: mlr3measures","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mlr3spatial-package.html","id":"suggested-packages","dir":"Reference","previous_headings":"","what":"Suggested packages","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Parallelization framework: future Progress bars: progressr Encapsulated evaluation: evaluate, callr (external process)","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mlr3spatial-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package Options","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"\"mlr3.debug\": set TRUE, parallelization via future disabled simplify debugging provide concise tracebacks. Note results computed debug mode enabled use different seeding mechanism reproducible. \"mlr3.allow_utf8_names\": set TRUE, checks feature names relaxed, allowing non-ascii characters column names. experimental temporal option pave way text analysis, likely removed future version package. analysis.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mlr3spatial-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Becker M, Schratz P (2024). mlr3spatial: Support Spatial Objects Within 'mlr3' Ecosystem. https://mlr3spatial.mlr-org.com, https://github.com/mlr-org/mlr3spatial.","code":""},{"path":[]},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/mlr3spatial-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Maintainer: Marc Becker marcbecker@posteo.de (ORCID) Authors: Patrick Schratz patrick.schratz@gmail.com (ORCID)","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/numeric_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Numeric Layer Generator — numeric_layer","title":"Numeric Layer Generator — numeric_layer","text":"Generates numeric layer passed generate_stack().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/numeric_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numeric Layer Generator — numeric_layer","text":"","code":"numeric_layer(id, in_memory = FALSE)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/numeric_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numeric Layer Generator — numeric_layer","text":"id (character(1)) Layer id. in_memory (logical(1)) FALSE (default), layer written disk.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/numeric_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numeric Layer Generator — numeric_layer","text":"Named list()","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/predict_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict on Spatial Objects with mlr3 Learners — predict_spatial","title":"Predict on Spatial Objects with mlr3 Learners — predict_spatial","text":"function allows directly predict mlr3 learners various spatial objects.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/predict_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict on Spatial Objects with mlr3 Learners — predict_spatial","text":"","code":"predict_spatial(   newdata,   learner,   chunksize = 200L,   format = \"terra\",   filename = NULL )"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/predict_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict on Spatial Objects with mlr3 Learners — predict_spatial","text":"newdata (terra::SpatRaster | stars::stars | sf::sf | raster::RasterStack | raster::RasterBrick). New data predict . spatial data formats convertible as_data_backend() supported e.g. terra::SpatRaster sf::sf. learner (Learner). Learner trained model. chunksize (integer(1)) chunksize determines many subparts prediction task split . value can roughly thought megabyte raster file disk. example, prediction 1 GB file carried chunksize = 100L, prediction happen 10 chunks. default chunksize = 1000L might good compromise speed memory usage. find running memory, reduce value. format (character(1)) Output class resulting object. Accepted values \"raster\", \"stars\" \"terra\" input raster. Note choosing something else \"terra\", spatial object converted respective format might cause overhead runtime memory allocation. vector data \"sf\" supported. filename (character(1)) Path spatial object written .","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/predict_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict on Spatial Objects with mlr3 Learners — predict_spatial","text":"Spatial object class given argument format.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/predict_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict on Spatial Objects with mlr3 Learners — predict_spatial","text":"","code":"library(terra, exclude = \"resample\") #> terra 1.8.29  # fit rpart on training points task_train = tsk(\"leipzig\") learner = lrn(\"classif.rpart\") learner$train(task_train)  # load raster stack = rast(system.file(\"extdata\", \"leipzig_raster.tif\", package = \"mlr3spatial\"))  # predict land cover classes pred = predict_spatial(stack, learner, chunksize = 1L) #> Warning: DataBackend$data_formats is deprecated and will be removed in the future."},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/sample_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Points in Raster Stack — sample_stack","title":"Sample Points in Raster Stack — sample_stack","text":"Samples n points raster stack.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/sample_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Points in Raster Stack — sample_stack","text":"","code":"sample_stack(stack, n = 100)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/sample_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Points in Raster Stack — sample_stack","text":"stack (terra::SpatRaster) Raster stack. n (integer(1)) Number points.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/sample_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Points in Raster Stack — sample_stack","text":"sf::sf","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/write_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Raster in Chunks — write_raster","title":"Write a Raster in Chunks — write_raster","text":"Writes square raster disk chunks. Internal helper function.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/write_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Raster in Chunks — write_raster","text":"","code":"write_raster(data)"},{"path":"https://mlr3spatial.mlr-org.com/dev/reference/write_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Raster in Chunks — write_raster","text":"data [SpatRaster]SpatRaster object.","code":""},{"path":[]},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-050","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.5.0","title":"mlr3spatial 0.5.0","text":"CRAN release: 2024-03-09 compatibility: Work new paradox version 1.0.0","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-041","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.4.1","title":"mlr3spatial 0.4.1","text":"CRAN release: 2023-05-03 refactor: Use terra::inMemory() function instead @ptr.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-040","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.4.0","title":"mlr3spatial 0.4.0","text":"CRAN release: 2023-02-27 refactor: data input spatial_predict() accepts SpatRaster, stars sf RasterStack RasterBrick objects now. mlr3::TaskUnsupervised can still passed argument name changed task newdata. fix: log showed warning estimated values per chunk floating number.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-031","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.3.1","title":"mlr3spatial 0.3.1","text":"CRAN release: 2022-12-16 chore: Remove rgdal dependency require raster version 3.6-11.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-030","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.3.0","title":"mlr3spatial 0.3.0","text":"CRAN release: 2022-10-20 feat: Add prediction vector data spatial_predict().","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-021","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.2.1","title":"mlr3spatial 0.2.1","text":"CRAN release: 2022-08-25 fix: Add \"space\" \"time\" column role mlr3spatiotempcv","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-020","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.2.0","title":"mlr3spatial 0.2.0","text":"CRAN release: 2022-08-18 BREAKING CHANGE: TaskClassifST TaskRegrST used train learner spatial data. new tasks unify work mlr3spatiotempcv. BREAKING CHANGE: Raster objects used create tasks training anymore. BREAKING CHANGE: TaskUnsupervised used predict rasters objects now. new task type convenient data without response. feat: Add as_task_regr_st() as_task_classif_st() spatial objects. feat: Add as_task_unsupervised() raster objects. feat: Task leipzig land cover target. feat: data(\"leipzig\") loads sf object land cover Leipzig. feat: GeoTIFF GeoPackage Leipzig extdata folder. refactor: Vector data handled DataBackendDataTable now DataBackendVector removed. BREAKING CHANGE: DataBackendRaster created RasterLayer objects anymore. fix: spatial_predict() returned unnamed response. fix: spatial_predict() wrote predictions wrong cell. BREAKING CHANGE: Remove demo_raster(), demo_stack_spatraster(), demo_stack_rasterbrick() demo_rasterbrick() functions. feat: Prediction layer contains NA raster cells NA values one feature layers.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-012","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.1.2","title":"mlr3spatial 0.1.2","text":"CRAN release: 2022-03-06 refactor: Stars objects directly converted terra objects now.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-011","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.1.1","title":"mlr3spatial 0.1.1","text":"CRAN release: 2022-01-20 fix: Compatibility terra update.","code":""},{"path":"https://mlr3spatial.mlr-org.com/dev/news/index.html","id":"mlr3spatial-010","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.1.0","title":"mlr3spatial 0.1.0","text":"CRAN release: 2021-11-16 First version mlr3spatial.","code":""}]
